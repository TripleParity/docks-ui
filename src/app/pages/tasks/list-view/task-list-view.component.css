.heading
{
    background-color: #F7F7F7;
    padding: 10px;
}
#Search{
    background-color:transparent;
    border: none;
}

.status
{
    width: 70px;
    text-align: center;
    border-radius: 5px;
}

.failed, shutdown, rejected, orphaned, remove
{
    color: red;
    border: 1px solid red; 
}
.running
{
    color: green;
    border: 1px solid green; 
}
.new
{
    color: darkslateblue;
    border: 1px solid darkslateblue;     
}
.pending
{
    color: darkgoldenrod;
    border: 1px solid darkgoldenrod; 
}
.assigned, .accepted, preparing, starting
{
    color: dodgerblue;
    border: 1px solid dodgerblue;  
}
.dark
{
    color: darkgray;
}
.default
{
    color: black;
    border: 1px solid black;
}

/*
public getState(ste: string): string {
    switch (ste) {
      // 'NEW' The task was initialized
      case 'NEW': {
        return 'primary';
      }
      // PENDING	Resources for the task were allocated
      case 'PENDING': {
        return 'warning';
      }
      // ASSIGNED	Docker assigned the task to nodes.
      case 'ASSIGNED': {
        return 'info';
      }
      // ACCEPTED	The task was accepted by a worker node. If a worker node rejects the task, the state changes to REJECTED.
      case 'ACCEPTED': {
        return 'info';
      }
      // PREPARING	Docker is preparing the task.
      case 'PREPARING': {
        return 'info';
      }
      // STARTING	Docker is starting the task.
      case 'STARTING': {
        return 'info';
      }
      // RUNNING	The task is executing.
      case 'RUNNING': {
        return 'success';
      }
      // COMPLETE	The task exited without an error code.
      case 'COMPLETE': {
        return 'dark';
      }
      // FAILED	The task exited with an error code.
      case 'FAILED': {
        return 'danger';
      }
      // SHUTDOWN	Docker requested the task to shut down.
      case 'SHUTDOWN': {
        return 'danger';
      }
      // REJECTED	The worker node rejected the task.
      case 'REJECTED': {
        return 'danger';
      }
      // ORPHANED	The node was down for too long.
      case 'ORPHANED': {
        return 'danger';
      }
      // REMOVE	The task is not terminal but the associated service was removed or scaled down.
      case 'REMOVE': {
        return 'danger';
      }
      // Something went wrong
      default: {
        return 'light';
      }
    }
}

*/